package com.example.questapplication;

import android.content.Intent;
import android.os.Bundle;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;

public class CreateAccountActivity extends AppCompatActivity {

    private EditText usernameInput, emailInput, passwordInput;
    private Button createAccountButton;
    private TextView goToSignIn;

    private FirebaseAuth mAuth;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.createaccountactivity);

        // Initialize Firebase Auth
        mAuth = FirebaseAuth.getInstance();

        // Link UI elements to properties
        usernameInput = findViewById(R.id.usernameInput);
        emailInput = findViewById(R.id.emailInput);
        passwordInput = findViewById(R.id.passwordInput);
        createAccountButton = findViewById(R.id.createAccountButton);
        goToSignIn = findViewById(R.id.goToSignIn);

        createAccountButton.setOnClickListener(v -> {
            // Retrieve user input
            String username = usernameInput.getText().toString().trim();
            String email = emailInput.getText().toString().trim();
            String password = passwordInput.getText().toString().trim();

            // Validate form input
            if (!validateForm(username, email, password)) {
                return;
            }

            // Create user with email and password
            mAuth.createUserWithEmailAndPassword(email, password)
                    .addOnCompleteListener(this, task -> {
                        if (task.isSuccessful()) {
                            // Registration success
                            FirebaseUser user = mAuth.getCurrentUser();
                            if (user != null) {
                                // Store additional user details in Firebase Realtime Database under user UID
                                DatabaseReference databaseReference = FirebaseDatabase.getInstance().getReference("Users").child(user.getUid());

                                databaseReference.child("username").setValue(username).addOnCompleteListener(task1 -> {
                                    if (task1.isSuccessful()) {
                                        // Success in storing additional details
                                        Toast.makeText(CreateAccountActivity.this, "Account created successfully!", Toast.LENGTH_SHORT).show();
                                        startActivity(new Intent(CreateAccountActivity.this, MainActivity.class));
                                        finish();
                                    } else {
                                        // Failure in storing additional details
                                        Toast.makeText(CreateAccountActivity.this, "Failed to store additional details: " + task1.getException().getMessage(), Toast.LENGTH_LONG).show();
                                    }
                                });
                            }
                        } else {
                            // Registration failure
                            Toast.makeText(CreateAccountActivity.this, "Authentication failed: " + task.getException().getMessage(), Toast.LENGTH_LONG).show();
                        }
                    });
        });

        goToSignIn.setOnClickListener(v -> {
            // Navigate to sign-in screen
            startActivity(new Intent(this, SignInActivity.class));
            finish();
        });
    }

    // Method to validate user input
    private boolean validateForm(String username, String email, String password) {
        if (username.isEmpty() || email.isEmpty() || password.isEmpty()) {
            Toast.makeText(this, "All fields are required", Toast.LENGTH_SHORT).show();
            return false;
        }

        if (!android.util.Patterns.EMAIL_ADDRESS.matcher(email).matches()) {
            Toast.makeText(this, "Please enter a valid email address, e.g., format@example.com", Toast.LENGTH_SHORT).show();
            return false;
        }

        if (password.length() < 6) {
            Toast.makeText(this, "Password must be at least 6 characters long.", Toast.LENGTH_SHORT).show();
            return false;
        }

        if (!password.matches(".*\\d.*")) {
            Toast.makeText(this, "Password must contain at least one number.", Toast.LENGTH_SHORT).show();
            return false;
        }

        return true;
    }
}
